buildscript {
    dependencies {
//tag::buildscriptDependenciesWebdriverBinaries[]
        classpath "gradle.plugin.com.energizedwork.webdriver-binaries:webdriver-binaries-gradle-plugin:1.4"
//end::buildscriptDependenciesWebdriverBinaries[]
    }
}

plugins {
    id "io.spring.dependency-management" version "1.0.6.RELEASE"
    id "com.github.johnrengelman.shadow" version "4.0.2"
    id "net.ltgt.apt-eclipse" version "0.18"
    id "net.ltgt.apt-idea" version "0.18"	
}

apply plugin:"application"
apply plugin:"groovy"
//tag::applyPluginWebdriverBinaries[]
apply plugin:"com.energizedwork.webdriver-binaries"
//end::applyPluginWebdriverBinaries[]

version "0.1"
group "example.micronaut"

repositories {
    mavenLocal()
    mavenCentral()
    maven { url "https://jcenter.bintray.com" }
}

dependencyManagement {
    imports {
        mavenBom 'io.micronaut:micronaut-bom:1.0.3'
    }
}

dependencies {
    annotationProcessor "io.micronaut:micronaut-inject-java"
    annotationProcessor "io.micronaut:micronaut-validation"
    compile "io.micronaut:micronaut-inject"
    compile "io.micronaut:micronaut-validation"
    compile "io.micronaut:micronaut-runtime"
    compile "io.micronaut:micronaut-http-client"
    compile "io.micronaut:micronaut-http-server-netty"
    compile "io.micronaut:micronaut-multitenancy"
    compile "io.micronaut:micronaut-views"
    compileOnly "io.micronaut:micronaut-inject-java"
    runtime "ch.qos.logback:logback-classic:1.2.3"
    runtime "com.github.jknack:handlebars:4.1.0"
    testCompile "io.micronaut:micronaut-inject-groovy"
    testCompile "org.codehaus.groovy:groovy-all:2.5.0"
    testCompile "org.spockframework:spock-core:1.1-groovy-2.4"
    testCompile "org.gebish:geb-spock:2.1"
    testCompile "org.seleniumhq.selenium:selenium-support:3.6.0"
    testCompile "org.seleniumhq.selenium:selenium-api:3.6.0"
    testRuntime "org.seleniumhq.selenium:selenium-chrome-driver:3.6.0"
    testRuntime "org.seleniumhq.selenium:selenium-firefox-driver:3.6.0"
}

shadowJar {
    mergeServiceFiles()
}

run.jvmArgs('-noverify', '-XX:TieredStopAtLevel=1')

mainClassName = "example.micronaut.Application"

tasks.withType(JavaCompile){
    options.encoding = "UTF-8"
    options.compilerArgs.add('-parameters')
}

//tag::webdriverBinaries[]
webdriverBinaries {
    chromedriver '2.42'
    geckodriver '0.22.0'
}
//end::webdriverBinaries[]

//tag::taskWithTypeTest[]
tasks.withType(Test) {
    systemProperty "geb.env", System.getProperty('geb.env')
    systemProperty "webdriver.chrome.driver", System.getProperty('webdriver.chrome.driver')
    systemProperty "webdriver.gecko.driver", System.getProperty('webdriver.gecko.driver')
}
//end::taskWithTypeTest[]
